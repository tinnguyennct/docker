version: "3.8"
services:
  zookeeper:
    image: debezium/zookeeper:latest
    container_name: 'zookeeper'
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    volumes:
      - zookeeper_data:/zookeeper/data
      - zookeeper_log:/zookeeper/logs
      - zookeeper_txns:/zookeeper/txns
    networks:
      - kafka_hub

  kafka:
    build:
      context: ./
      dockerfile: ./Dockerfile
    image: kafka_monitor
    #image: debezium/kafka
    container_name: 'kafka'
    environment:
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://10.96.17.142:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
      KAFKA_OPTS: -javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=1309:/kafka/etc/prom-jmx-agent-config.yml
      JMXHOST: 0.0.0.0
      JMXPORT: 9193
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 1309:1309
    volumes:
      - kafka_data:/kafka/data
    networks:
      - kafka_hub

  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.0
    container_name: 'schema-registry'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://schema-registry:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:29092"
    depends_on:
      - kafka
    ports:
      - 8081:8081
    networks:
      - kafka_hub

  connector:
    #image: debezium/connect:1.7
    build:
      context: ./
      dockerfile: ./Dockerfile-connect
    image: connect_monitor
    container_name: 'connector'
    environment:
      BOOTSTRAP_SERVERS: "kafka:29092"
      GROUP_ID: "1"
      CONFIG_STORAGE_TOPIC: "connector_configs"
      OFFSET_STORAGE_TOPIC: "connector_offsets"
      STATUS_STORAGE_TOPIC: "connector_statuses"
      KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_TOPIC_CREATION_ENABLE: "false"
      KAFKA_OPTS: -javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=1308:/kafka/etc/prom-jmx-agent-config.yml
      JMXHOST: 0.0.0.0
      JMXPORT: 9192
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 8083:8083
      - 1308:1308
    networks:
      - kafka_hub


  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    container_name: 'kafdrop'
    environment:
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKERCONNECT: "kafka:29092"
      SCHEMAREGISTRY_CONNECT: "http://schema-registry:8081"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - 9000:9000
    networks:
      - kafka_hub

volumes:
  kafka_data:
    external: true
  zookeeper_data:
    external: true
  zookeeper_log:
    external: true
  zookeeper_txns:
    external: true
networks:
  kafka_hub:
    external: true

